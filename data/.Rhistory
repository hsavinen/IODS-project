install.packages("rmarkdown", "C:\Users\Admin\Documents\R\win-library")
install.packages("rmarkdown", lib = "C:\Users\Admin\Documents\R\win-library")
chooseCRANmirror()
R -e 'chooseCRANmirror(graphics=FALSE, ind=108);library(rbundler);bundle()'
chooseCRANmirror(graphics=FALSE, ind=108);library(rbundler);bundle()
install.packages("rmarkdown")
install.packages(c("abind", "car", "colorspace", "corpcor", "corrgram", "d3Network", "DBI", "DEoptimR", "digest", "e1071", "fdrtool", "Formula", "GGally", "ggplot2", "gmp", "gtable", "gtools", "Hmisc", "huge", "igraph", "latticeExtra", "lavaan", "lme4", "mnormt", "munsell", "mvoutlier", "mvtnorm", "nortest", "OpenMx", "pls", "plyr", "psych", "qgraph", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppEigen", "RCurl", "Rmpfr", "robCompositions", "robustbase", "rockchalk", "rrcov", "RSQLite", "rtiff", "sandwich", "scales", "sem", "seriation", "sgeostat", "stringr", "TSP", "XML", "zoo"))
devtools::install_github("krlmlr/rprojroot")
install_github("krlmlr/rprojroot")
library(devtools)
install.packages("devtools")
library(devtools)
install_github("krlmlr/rprojroot")
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header=T)
View(learning2014)
head(learning2014)
summary(learning2014)
View(learning2014)
View(learning2014)
dim(learning2014)
dim(learning2014)
head(learning2014)
str(learning2014)
dim(learning2014)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header=T)
dim(learning2014)
str(learning2014)
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
library(dplyr)
install.packages("dplyr")
library(dplyr)
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns <- select(learning2014, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
learning2014$deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
str(learning2014)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
analysis_learning2014 <- select(learning2014,one_of(keep_columns))
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
analysis_learning2014 <- select(learning2014,one_of(keep_columns))
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$Deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$Surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$Stra <- rowMeans(strategic_columns)
keep_columns <- c("gender","Age","Attitude", "Deep", "Stra", "Surf", "Points")
analysis_learning2014 <- select(learning2014,one_of(keep_columns))
analysis_learning2014 <- filter(learning2014, points != 0)
analysis_learning2014 <- filter(analysis_learning2014, points != 0)
analysis_learning2014 <- filter(analysis_learning2014, Points != 0)
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
head(learning2014)
dim(learning2014)
str(learning2014)
p <- ggpairs(learning2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
regression_model <- lm(points ~ attitude + stra + surf, data = learning2014)
regression_model <- lm(Points ~ Attitude + Stra + Surf, data = learning2014)
summary(regression_model)
plot(my_model2, which = c(1,2,5), par(mfrow = c(2,2)))
plot(regression_model, which = c(1,2,5), par(mfrow = c(2,2)))
```r{}
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
str(learning2014)
```
str(learning2014)
```r{}
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
```
```r{}
str(learning2014)
```
```r{}
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
```
```r{}
str(learning2014)
```
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
str(learning2014)
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
regression_model <- lm(Points ~ Attitude + Stra + Surf, data = learning2014)
summary(regression_model)
regression_model <- lm(Points ~ Attitude + Stra + Surf, data = learning2014)
summary(regression_model)
regression_model <- lm(Points ~ Attitude, data = learning2014)
summary(regression_model)
plot(regression_model, which = c(1,2,5), par(mfrow = c(2,2)))
library(ggplot2)
library(GGally)
read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ',', header = TRUE)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ',', header = TRUE)
str(alc)
alc.tab <- table(alc$sex, alc$high_use)
alc.tab
pairs(alc)
pairs(alc$famsize, alc$Pstatus, alc$Medu, alc$Fedu)
pairs(alc$famsize, alc$Pstatus, alc$Medu, alc$Fedu)
pairs(alc$famsize, alc$Pstatus, alc$Medu, alc$Fedu)
g1 <- ggplot(alc, aes(x = high_use, y = famsize))
g1
g1 <- ggplot(alc, aes(x = high_use, y = famsize)) + geom_bar()
g1
g1 <- ggplot(alc, aes(x = famsize, y = high_use)) + geom_bar()
g1
g1 <- ggplot(alc, aes(x = famsize) + geom_bar()
g1
g1 <- ggplot(alc, aes(x = famsize) + geom_bar())
g1 <- ggplot(data = alc, aes(famsize) + geom_bar())
g1 <- ggplot(data = alc, aes(famsize)
g1
g1 <- ggplot(data = alc, aes(famsize)
g1
g1 <- ggplot(data = alc, aes(x = famsize, y = high_use))
g1 + geom_bar() + stat_identity()
g1 + geom_bar() + stat_count()
g1 + geom_bar(stat="identity")
g1 + geom_bar(stat="count")
g1 + geom_bar(stat="identity")
g1 + geom_bar(stat="summary")
g1 <- ggplot(data = alc, aes(x = famsize = TRUE, y = high_use))
g1 <- ggplot(data = alc, aes(x = (famsize = TRUE), y = high_use))
g1 + geom_bar(stat="summary")
g1 <- ggplot(data = alc, aes(x = famsize, y = (high_use = T))
g1 + geom_bar(stat="summary")
g1 <- ggplot(data = alc, aes(x = famsize, y = (high_use = T)))
g1 + geom_bar(stat="summary")
g1 + geom_bar(stat="count")
g1 + geom_bar(stat="identity")
g1 + geom_boxplot()
g1 <- ggplot(data = alc, aes(x = famsize, y = high_use))
g1 + geom_boxplot()
g1 <- ggplot(data = alc, aes(x = high_use, y = famsize))
g1 + geom_boxplot()
alc.tab <- table(alc$famsize, alc$high_use)
alc.tab
str(alc)
g1 <- ggplot(data = alc, aes(x = high_use, y = famrel))
g1 + geom_boxplot()
g1 + geom_bar()
g1 + geom_bar(stat = "identity")
g1 + geom_bar(stat = "summary")
g1 <- ggplot(data = alc, aes(x = famrel, y = high_use))
g1 + geom_bar(stat = "summary")
g1 + geom_bar(stat = "identity")
g1 <- ggplot(data = alc, aes(x = famrel, y = group_by(high_use)))
g1 + geom_bar(stat = "identity")
g1 <- ggplot(data = alc, aes(x = famrel, y = high_use()))
g1 + geom_bar(stat = "identity")
g1 <- ggplot(data = alc, aes(x = famrel, y = high_use))
g1 + geom_bar(stat = "identity")
g1 + geom_bar(stat = "density")
g1 + geom_bar(stat = "Count")
g1 <- ggplot(data = alc, aes(x = famrel)
g1 + geom_bar(stat = "Count")
g1 <- ggplot(data = alc, aes(x = famrel))
g1 +  geom_bar(aes(fill = high_use))
g1 <- ggplot(data = alc, aes(x = famrel), xlab = " quality of family relationships (numeric: from 1 - very bad to 5 - excellent)")
g1 +  geom_bar(aes(fill = high_use))
g1 <- ggplot(data = alc, aes(x = famrel)
g1 +  geom_bar(aes(fill = high_use))
g1 <- ggplot(data = alc, aes(x = famrel)
g1 +  geom_bar(aes(fill = high_use))
g1 <- ggplot(data = alc, aes(x = famrel))
g1 +  geom_bar(aes(fill = high_use))
g1 +  geom_bar(aes(fill = high_use)) + xlab(" quality of family relationships (numeric: from 1 - very bad to 5 - excellent")
g1 +  geom_bar(aes(fill = high_use)) + xlab(" quality of family relationships (numeric: from 1 - very bad to 5 - excellent)")
g2 <- ggplot(data = alc, aes(x = Pstatus))
g2 + geom_bar(aes(fill = high_use))
g3 <-ggplot(data = alc, aes(x = Medu))
g3 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = Fedu))
g4 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = higher))
g4 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = freetime))
g4 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = studytime))
g4 + geom_bar(aes(fill = high_use))
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = address))
g4 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = health))
g4 + geom_bar(aes(fill = high_use))
g2 <- ggplot(data = alc, aes(x = Pstatus))
g2 + geom_bar(aes(fill = high_use))
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g1 <- ggplot(data = alc, aes(x = famrel))
g1 +  geom_bar(aes(fill = high_use)) + xlab(" quality of family relationships (numeric: from 1 - very bad to 5 - excellent)")
g2 <- ggplot(data = alc, aes(x = Pstatus))
g2 + geom_bar(aes(fill = high_use))
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = sex))
g4 + geom_bar(aes(fill = high_use))
g1 +  geom_boxplot()
g1 <- ggplot(alc, aes(x = high_use, y = G3))
g1 +  geom_boxplot()
g4 <-ggplot(data = alc, aes(x = sex))
g4 + geom_bar(aes(fill = high_use))
g2 <- ggplot(data = alc, aes(x = Pstatus))
g2 + geom_bar(aes(fill = high_use))
g2 + geom_count()
g2 <- ggplot(data = alc, aes(x = Pstatus, y = high_use))
g2 + geom_count()
g1 +  geom_boxplot()
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g2 <- ggplot(data = alc, aes(x = Pstatus))
g2 + geom_bar(aes(fill = high_use))
g2 <- ggplot(data = alc, aes(x = romantic))
g2 + geom_bar(aes(fill = high_use))
romantictab <- table(alc$romantic, alc$high_use)
romantictab
romantictab <- table(alc$abcences, alc$high_use)
romantictab <- table(alc$absences, alc$high_use)
romantictab
g2 <- ggplot(data = alc, aes(x = high_use, y = absences))
g2 + geom_boxplot()
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g4 <-ggplot(data = alc, aes(x = sex))
g4 + geom_bar(aes(fill = high_use))
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g2 <- ggplot(data = alc, aes(x = high_use, y = absences))
g2 + geom_boxplot()
g1 <- ggplot(alc, aes(x = high_use, y = G3))
g1 +  geom_boxplot()
m <- glm(high_use ~ goout + absences + sex + G3, data = alc, family = "binomial")
summary(m)
coef(m)
OR <- coef(m) %>% exp
library(tidyr)
library(dlyr)
install.packages("dlyr")
library(dlyr)
install.packages("tidyr")
library(tidyr)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
library(ggplot2)
library(GGally)
library(tidyr)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ',', header = TRUE)
colnames(alc)
library(ggplot2)
library(GGally)
library(tidyr)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ',', header = TRUE)
colnames(alc)
g1 <- ggplot(alc, aes(x = high_use, y = G3))
g1 +  geom_boxplot()
g2 <-ggplot(data = alc, aes(x = sex))
g2 + geom_bar(aes(fill = high_use))
g3 <-ggplot(data = alc, aes(x = goout))
g3 + geom_bar(aes(fill = high_use))
g4 <- ggplot(data = alc, aes(x = high_use, y = absences))
g4 + geom_boxplot()
m <- glm(high_use ~ goout + absences + sex + G3, data = alc, family = "binomial")
library(ggplot2)
library(GGally)
library(tidyr)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ',', header = TRUE)
colnames(alc)
m <- glm(high_use ~ goout + absences + sex + G3, data = alc, family = "binomial")
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m <- glm(high_use ~ goout + absences + sex, data = alc, family = "binomial")
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
library(dplyr)
m <- glm(high_use ~ goout + absences + sex, data = alc, family = "binomial")
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
m <- glm(high_use ~ goout + absences + sex, data = alc, family = "binomial")
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
table(high_use = alc$high_use, prediction = alc$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(MASS)
str(Boston)
pairs(Boston)
library(ggplot2)
library(GGally)
p <- ggpairs(Boston, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
pairs(Boston, lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Iris Scatterplot Matrix")
pairs(Boston, lower.panel=panel.smooth, upper.panel=panel.cor, pch=20, main="Iris Scatterplot Matrix")
pairs(data = Boston, lower.panel=panel.smooth, upper.panel=panel.cor, pch=20, main="Iris Scatterplot Matrix")
pairs(data = Boston, lower.panel = panel.smooth())
pairs(data = Boston)
pairs(Boston)
pairs(Boston, lower.panel = panel.smooth())
?pairs
str(Boston[1:14])
str(Boston)
pairs(Boston[1:14], lower.panel = panel.smooth())
pairs(Boston[1:14], lower.panel = panel.smooth(), pch = 21)
pairs(Boston[1:14], pch = 21)
pairs(Boston)
summary(Boston)
```{r}
summary(Boston)
pairs(Boston)
summary(boston_scaled)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled)
bins <- quantile(scaled_boston$crim)
library(MASS)
data('Boston')
str(Boston)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled)
bins <- quantile(boston_scaled$crim)
bins
library(dplyr)
library(MASS)
data('Boston')
str(Boston)
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med-high", "high"))
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
plot(lda.fit, dimen = 2, col= classes, pch = classes)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col= classes, pch = classes)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
data("Boston")
scaled_data <- scale(Boston)
dist_eu <- dist(scaled_data)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
pairs(Boston, col = km$cluster)
km <-kmeans(dist_eu, centers = 2)
pairs(scaled_data, col = km$cluster)
km <-kmeans(dist_eu, centers = 2)
km
pairs(scaled_data, col = km$cluster)
km <-kmeans(dist_eu, centers = 2)
pairs(scaled_data, col = km$cluster)
km <-kmeans(dist_eu, centers = 2)
plot(sclaed_data,col=km$cluster)
km <-kmeans(dist_eu, centers = 2)
plot(scaled_data,col=km$cluster)
points(km$center,col=1:2,pch=8,cex=1)
km <-kmeans(dist_eu, centers = 2)
plot(scaled_data,col=km$cluster)
points(km$center,col=1:14,pch=8,cex=1)
km <-kmeans(dist_eu, centers = 2)
pairs(scaled_data,col=km$cluster)
library(ggplot2)
library(GGally)
library(tidyr)
library(dplyr)
alc <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ',', header = TRUE)
colnames(alc)
library(dplyr)
library(MASS)
data('Boston')
str(Boston)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled)
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med-high", "high"))
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col= classes, pch = classes)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
data("Boston")
scaled_data <- scale(Boston)
dist_eu <- dist(scaled_data)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b')
km <-kmeans(dist_eu, centers = 2)
pairs(scaled_data,col=km$cluster)
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http:/s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http:/s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
hd <- read.csv(http:s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com//assets.datacamp.com//production//course_2218//datasets//human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com//assets.datacamp.com//production//course_2218//datasets//human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv" , stringsAsFactors = F)
hd <- read.csv(http:/s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv" , stringsAsFactors = F)
hd <- read.csv(/http:/s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv" , stringsAsFactors = F)
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv" , stringsAsFactors = F)
hd <- read.csv(http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv, stringsAsFactors = F)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
summary(hd)
summary(gii)
library(dplyr)
rename(hd, rank = HDI.Rank, hdi = Human.Development.Index..HDI., life_expectancy = Life.Expectancy.at.Birth, edu_expected = Expected.Years.of.Education, edu_mean = Mean.Years.of.Education, gni = Gross.National.Income..GNI..per.Capita, gni_rank_minus_hdi_rank = GNI.per.Capita.Rank.Minus.HDI.Rank)
str(hd)
hd <- rename(hd, rank = HDI.Rank, hdi = Human.Development.Index..HDI., life_expectancy = Life.Expectancy.at.Birth, edu_expected = Expected.Years.of.Education, edu_mean = Mean.Years.of.Education, gni = Gross.National.Income..GNI..per.Capita, gni_rank_minus_hdi_rank = GNI.per.Capita.Rank.Minus.HDI.Rank)
str(hd)
hd <- rename(hd, rank = HDI.Rank, hdi = Human.Development.Index..HDI., life_expectancy = Life.Expectancy.at.Birth, edu_expected = Expected.Years.of.Education, edu_mean = Mean.Years.of.Education, gni = Gross.National.Income..GNI..per.Capita, gni_rank_minus_hdi_rank = GNI.per.Capita.Rank.Minus.HDI.Rank, country = Country)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- rename(hd, rank = HDI.Rank, hdi = Human.Development.Index..HDI., life_expectancy = Life.Expectancy.at.Birth, edu_expected = Expected.Years.of.Education, edu_mean = Mean.Years.of.Education, gni = Gross.National.Income..GNI..per.Capita, gni_rank_minus_hdi_rank = GNI.per.Capita.Rank.Minus.HDI.Rank, country = Country)
str(hd)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
hd <- rename(hd, hdi_rank = HDI.Rank, hdi = Human.Development.Index..HDI., life_expectancy = Life.Expectancy.at.Birth, edu_expected = Expected.Years.of.Education, edu_mean = Mean.Years.of.Education, gni = Gross.National.Income..GNI..per.Capita, gni_rank_minus_hdi_rank = GNI.per.Capita.Rank.Minus.HDI.Rank, country = Country)
str(hd)
gii <- rename(gii, gii_rank = GII.Rank, country = Country, gii = Gender.Inequality.Index..GII., maternal_mortality =  Maternal.Mortality.Ratio, repres_parliament = Percent.Representation.in.Parliament, second_edu_F = Population.with.Secondary.Education..Female., second_edu_M = Population.with.Secondary.Education..Male., labour_particip_F = Labour.Force.Participation.Rate..Female., labour_particip_M = Labour.Force.Participation.Rate..Male.)
str(gii)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
gii <- rename(gii, adol_birthrate = Adolescent.Birth.Rate ,gii_rank = GII.Rank, country = Country, gii = Gender.Inequality.Index..GII., maternal_mortality =  Maternal.Mortality.Ratio, repres_parliament = Percent.Representation.in.Parliament, second_edu_F = Population.with.Secondary.Education..Female., second_edu_M = Population.with.Secondary.Education..Male., labour_particip_F = Labour.Force.Participation.Rate..Female., labour_particip_M = Labour.Force.Participation.Rate..Male.)
str(gii)
gii <- mutate(gii, edu2F / edu2M = second_edu_F / second_edu_M)
gii <- mutate(gii, edu2F/edu2M = second_edu_F / second_edu_M)
gii <- mutate(gii, "edu2F/edu2M" = second_edu_F / second_edu_M)
str(gii)
gii <- mutate(gii, "labF/labM" = labour_particip_F / labour_particip_M)
sr(gii)
str(gii)
human <- inner_join(hd, gii, by = "country")
str(human)
setwd("C:/Users/Admin/Documents/GitHub/IODS-project/data")
write.csv(human, file = "human.csv", row.names=FALSE)
