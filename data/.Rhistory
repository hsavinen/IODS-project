1+1
install.packages("rmarkdown")
install.packages(rprojroot)
install.packages("rprojroot")
library("rmarkdown", lib.loc="~/R/win-library/3.1")
install.packages("rmarkdown")
getOption("repos")
getOption("repos")
install.packages("rmarkdown", "C:\Users\Admin\Documents\R\win-library")
install.packages("rmarkdown", "\Users\Admin\Documents\R\win-library")
install.packages("rmarkdown", "Users\Admin\Documents\R\win-library")
install.packages("rmarkdown", C:\Users\Admin\Documents\R\win-library)
install.packages("rmarkdown", C:Users\Admin\Documents\R\win-library)
install.packages("rmarkdown", "C:Users\Admin\Documents\R\win-library")
install.packages("rmarkdown", "C:\Users\Admin\Documents\R\win-library")
install.packages("rmarkdown", lib = "C:\Users\Admin\Documents\R\win-library")
chooseCRANmirror()
R -e 'chooseCRANmirror(graphics=FALSE, ind=108);library(rbundler);bundle()'
chooseCRANmirror(graphics=FALSE, ind=108);library(rbundler);bundle()
install.packages("rmarkdown")
install.packages(c("abind", "car", "colorspace", "corpcor", "corrgram", "d3Network", "DBI", "DEoptimR", "digest", "e1071", "fdrtool", "Formula", "GGally", "ggplot2", "gmp", "gtable", "gtools", "Hmisc", "huge", "igraph", "latticeExtra", "lavaan", "lme4", "mnormt", "munsell", "mvoutlier", "mvtnorm", "nortest", "OpenMx", "pls", "plyr", "psych", "qgraph", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppEigen", "RCurl", "Rmpfr", "robCompositions", "robustbase", "rockchalk", "rrcov", "RSQLite", "rtiff", "sandwich", "scales", "sem", "seriation", "sgeostat", "stringr", "TSP", "XML", "zoo"))
devtools::install_github("krlmlr/rprojroot")
install_github("krlmlr/rprojroot")
library(devtools)
install.packages("devtools")
library(devtools)
install_github("krlmlr/rprojroot")
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header=T)
View(learning2014)
head(learning2014)
summary(learning2014)
View(learning2014)
View(learning2014)
dim(learning2014)
dim(learning2014)
head(learning2014)
str(learning2014)
dim(learning2014)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", header=T)
dim(learning2014)
str(learning2014)
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
library(dplyr)
install.packages("dplyr")
library(dplyr)
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns <- select(learning2014, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
learning2014$deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
str(learning2014)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
analysis_learning2014 <- select(learning2014,one_of(keep_columns))
keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
analysis_learning2014 <- select(learning2014,one_of(keep_columns))
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$Deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$Surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$Stra <- rowMeans(strategic_columns)
keep_columns <- c("gender","Age","Attitude", "Deep", "Stra", "Surf", "Points")
analysis_learning2014 <- select(learning2014,one_of(keep_columns))
analysis_learning2014 <- filter(learning2014, points != 0)
analysis_learning2014 <- filter(analysis_learning2014, points != 0)
analysis_learning2014 <- filter(analysis_learning2014, Points != 0)
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
head(learning2014)
dim(learning2014)
str(learning2014)
p <- ggpairs(learning2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
regression_model <- lm(points ~ attitude + stra + surf, data = learning2014)
regression_model <- lm(Points ~ Attitude + Stra + Surf, data = learning2014)
summary(regression_model)
plot(my_model2, which = c(1,2,5), par(mfrow = c(2,2)))
plot(regression_model, which = c(1,2,5), par(mfrow = c(2,2)))
```r{}
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
str(learning2014)
```
str(learning2014)
```r{}
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
```
```r{}
str(learning2014)
```
```r{}
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
```
```r{}
str(learning2014)
```
library(GGally)
library(ggplot2)
learning2014 <- read.csv("C:/Users/Admin/Documents/GitHub/IODS-project/data/learning2014.csv")
str(learning2014)
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
regression_model <- lm(Points ~ Attitude + Stra + Surf, data = learning2014)
summary(regression_model)
regression_model <- lm(Points ~ Attitude + Stra + Surf, data = learning2014)
summary(regression_model)
regression_model <- lm(Points ~ Attitude, data = learning2014)
summary(regression_model)
plot(regression_model, which = c(1,2,5), par(mfrow = c(2,2)))
math <- read.table("C:/Users/Admin/Documents/GitHub/IODS-project/data/student-mat.csv")
math <- read.table("C:/Users/Admin/Documents/GitHub/IODS-project/data/student-mat.csv", sep = ";", header = TRUE)
por <- read.table("C:/Users/Admin/Documents/GitHub/IODS-project/data/student-por.csv", sep = ";", header = TRUE)
str(math)
str(por)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
str(math_por)
head(math_por)
str(math_por)
colnames(math_por)
glimpse(math_por)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- select(two_columns, 1)[[1]]
}
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
glimpse(alc)
glimpse(alc)
str(alc)
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
?write.csv
setwd("C:/Users/Admin/Documents/GitHub/IODS-project/data")
write.csv(analysis_learning2014, file = "alc.csv", row.names=FALSE)
write.csv(alc, file = "alc.csv", row.names=FALSE)
d <- read.csv("alc.csv")
glimpse(d)
